name: Test

inputs:
  mysql-version:
    required: true
  dockerfile:
    required: true

runs:
  using: "composite"
  steps:
    - name: Build and export to docker
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ${{ inputs.dockerfile }}
        load: true
        tags: automysqlbackup:test-${{ inputs.mysql-version }}

    - name: Set up the environment
      run: |
        echo ::notice::Starting MySQL ${{ inputs.mysql-version }}
        docker network create dbtest
        docker run --name test-mysql \
          --network dbtest \
          --env MYSQL_ROOT_PASSWORD=my-secret-pw \
          --volume "$(pwd)/test/testdb-init.sql:/docker-entrypoint-initdb.d/testdb-init.sql" \
          --health-cmd 'mysql --database=testdb --password=my-secret-pw --execute="SELECT count(*) > 0 FROM test_table;" --skip-column-names -B' \
          --health-interval 30s \
          --health-retries 5 \
          --health-timeout 10s \
          --detach mysql:${{ inputs.mysql-version }}
        timeout 100s bash -c 'while [ $(docker inspect --format="{{.State.Health.Status}}" test-mysql) != 'healthy' ]; do docker inspect --format="{{.State.Health.Status}}" test-mysql; sleep 1; done' || { echo "::error::MySQL server start up failure" && exit 1; }
        echo ::notice::MySQL ${{ inputs.mysql-version }} started
      shell: bash

    - name: Test backups from root
      run: |
        DIR="${{ runner.temp }}/automysqlbackup-root"
        sudo mkdir -p $DIR
        docker run --name automysqlbackup \
          --rm \
          --network dbtest \
          --volume "$DIR:/backup" \
          --env DBHOST=test-mysql \
          --env DBNAMES=all \
          --env USERNAME=root \
          --env PASSWORD=my-secret-pw \
          --env DBNAMES=all \
          --env DBEXCLUDE="performance_schema information_schema" \
          --env IGNORE_TABLES="testdb.ignoretable" \
          automysqlbackup:test-${{ inputs.mysql-version }}

        sudo ./test/test.sh $DIR
      shell: bash

    - name: Test backups from the regular user
      run: |
        DIR="${{ runner.temp }}/automysqlbackup-user"
        mkdir -p $DIR
        docker run --name automysqlbackup \
          --rm \
          --network dbtest \
          --volume "$DIR:/backup" \
          --env DBHOST=test-mysql \
          --env DBNAMES=all \
          --env USERNAME=root \
          --env PASSWORD=my-secret-pw \
          --env DBNAMES=all \
          --env DBEXCLUDE="performance_schema information_schema" \
          --env IGNORE_TABLES="testdb.ignoretable" \
          --env USER_ID="$(id -u)" \
          --env GROUP_ID="$(id -g)" \
          automysqlbackup:test-${{ inputs.mysql-version }}

        ./test/test.sh $DIR
      shell: bash
