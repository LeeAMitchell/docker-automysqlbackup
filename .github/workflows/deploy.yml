on:
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant:
          - dockerfile: Dokerfile
            version: "8.0"
          - dockerfile: Dokerfile.mysql57
            version: "5.7"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Switch to latest release tag
        id: latest-release
        run: |
          LATEST_RELEASE_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
          # git checkout $LATEST_RELEASE_VERSION
          echo "::set-output name=latest-release::$(echo $LATEST_RELEASE_VERSION)"

      - name: Test
        run: echo ${{ steps.latest-release.outputs.latest-release }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Inspect Buildx
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Login to Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.latest-release.outputs.latest-release }}-${{ matrix.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
